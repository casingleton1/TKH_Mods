Christopher Singleton – Vestibule – Module 5

Explain in your own words what is Python? Python is a type of coding or programming language used by many programmers. A programming language is a specific computer language that has its own set of rules. That precise syntax allows it to be understood by a computer rather than the native binary code. Programming languages allow coders to translate binary coding into commands more accessible by humans (instead of machines). Python has only been around since 1991 and was derived with the purpose of allowing programmers to code in as few lines as possible. Because there is less to type, this makes it a more efficient programming language to develop with. It also has a wide range of usability; meaning, novice programmers as well as experts are able to use this code.  A positive feature of Python is its large library collection which enables it to be used for web frameworks, web scraping, multimedia, scientific computing, text processing, information security, game development, machine learning, GUI applications and many others. Python supports packages as well as modules, which promotes code reuse, portability, and modularity.  As such, more big tech and web companies (such as Amazon, Google, Facebook, and Instagram) have a use for the language and its versatility, as opposed to a more restrictive language. There are built-in functions for all the commonly used coding concepts. Though is referred to being “user-friendly”, Python does not come pre-installed on all operating systems. Computers running Windows have to have it manually installed. While most Linux based computers and computers running MacOS already have python installed.Explain Data Python Data Types Simply, data is any collection of information on a computer that is generated for any purpose. Computers display data in the form of characters such as binary code, alphanumeric digits or special characters. Data types as they pertain to programming languages, refers to the type of info that is provided and how the flow of programming is dictated in that specific language. Python’s standard data types are the following: numeric, boolean, set, mapping, and sequence. Within the numeric data type, we have the subgroups integer, float, and complex. Integers are positive or negative whole numbers. Float data/numbers possess a decimal point. Complex data types have a variable or require a mathematical statement. The sequence data type facilitates the organization of multiple values in a string, list or tuple form. (A string is simply a collection of characters; meaning, “1 2 3” is a string of three, while “1” is a string of one.) The boolean data type only utilizes outputs for the two values of “true” and “false”. Python set data type centers on keeping a collection of data within a single unorganized variable. Sets also ignore repeated value; so, the elements {56677789} is actually {56789} when printed in set form. Lastly, the mapping data type works with an established Python dictionary (or data collection) to represent values and information. Explain in your own words What is a function? A function is coding that is created to produce an outcome or output based on what information has been input. Functions help programming to be more efficient by making codes more legible and less monotonous. Functions group related statements together for the purpose of completing a specific task. Thus, helping to make programs more modular and organized. Python has standard functions, but If a programmer finds himself using the same coding repeatedly while in production, he may want to create a function to call up that code every time he has a need for it. This is done rather than copy and pasting from a notes screen; These user-created functions are based in convenience and makes a code easier to follow.  When one defines his own function, specific rules must be followed in the syntax. Code block for a function must begin with the keyword ‘def’ followed by the name of the function (created by you) followed by parentheses. Any arguments or parameters of input must be put inside those parentheses.  The first statement in a function is the documentation string or docstring; this is an optional statement. This is followed by a “:” which signifies the beginning of the code block.  Following an indentation, a statement “return” closes/ends the code block unless a “passing back” expression is utilized within brackets. Defining this syntax creates the basic structure of the function. Once this is done, the function is then operated by ‘calling’ it from another function or the Python prompt.Explain the Python print statement A print statement dictates what a Python print function ‘calls’ to output. In essence, the statement prints a given object to a designated place such as the device screen or text file. The standard print statement looks like this: ‘print()’. It contains no arguments and the empty parentheses tells Python to run the function. When something is placed within the parentheses, the function will output whatever has been specified based on any defined information. For example, if I have defined that ‘name = chris’ then typed print(name), the function will print: “chris”.  So, the print statement takes data types, defined items, and referred to information to output what a user has requested. (pre_training.ipynb notebooks in separate text files.)